{"version":3,"sources":["feedback/feedback.js","App.js","index.js"],"names":["Fedback","state","good","neutral","bad","Object","values","this","reduce","a","b","Math","round","countTotalFeedback","keys","map","item","type","onClick","setState","prevState","toUpperCase","slice","countPositiveFeedbackPercentage","Component","defaultProps","title","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAIMA,G,kNASJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,mEAIL,OAAOC,OAAOC,OAAOC,KAAKN,OAAOO,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,K,wDAIzD,OAAOC,KAAKC,MAAyB,IAAlBL,KAAKN,MAAMC,KAAcK,KAAKM,wB,+BAGzC,IAAD,OACP,OACE,gCACE,uDAEA,8BACGR,OAAOS,KAAKP,KAAKN,OAAOc,KAAI,SAAAC,GAAI,OAC/B,wBACEC,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGJ,EAAOI,EAAUJ,GAAQ,OAJzC,SAQGA,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,UAI1C,4CAEA,+BACGjB,OAAOS,KAAKP,KAAKN,OAAOc,KAAI,SAAAC,GAAI,OAC/B,+BACGA,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,GADtC,IAC2C,EAAKrB,MAAMe,SAGxD,yCAAYT,KAAKM,wBACjB,qDAAwBN,KAAKgB,kCAA7B,iB,GAnDYC,cAAhBxB,EAKGyB,aAAe,CACpBC,MAAO,yBAoDI1B,QCxDA2B,MAJf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3c611ee8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './feedback.module.css';\n// import ButtonEl from './buttonElem';\n\nclass Fedback extends Component {\n  //   static propTypes = {\n  //     title: T.string,\n  //   };\n\n  static defaultProps = {\n    title: 'Please leave feedback',\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((a, b) => a + b, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Please leave feedback</h2>\n        {/* <ButtonEl /> */}\n        <div>\n          {Object.keys(this.state).map(item => (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState(prevState => {\n                  return { [item]: prevState[item] + 1 };\n                });\n              }}\n            >\n              {item[0].toUpperCase() + item.slice(1)}\n            </button>\n          ))}\n        </div>\n        <h2>Statistics</h2>\n        {/*this.countTotalFeedback() === 0 ? <Notification message=\"No feedback given\">.: */}\n        <ul>\n          {Object.keys(this.state).map(item => (\n            <li>\n              {item[0].toUpperCase() + item.slice(1)}:{this.state[item]}\n            </li>\n          ))}\n          <li>Total: {this.countTotalFeedback()}</li>\n          <li>Positive feedback: {this.countPositiveFeedbackPercentage()}%</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Fedback;\n","import Feedback from './feedback/feedback';\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}